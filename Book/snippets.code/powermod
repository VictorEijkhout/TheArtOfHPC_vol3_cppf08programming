// /rsa.cpp
long long pow_mod(long long i,long long p,long long m,int lev=0 ) {
  long long res;
  for (int il=0; il<lev; ++il) cout << "    ";
  cout << "computing powmod " << i << "," << p << "," << m << '\n';
  double bigpow = pow(i,p);
  if (bigpow>numeric_limits<long long>::max()) {
    long long p1=p/2, p2 = p-p1;
    long long
      res1 = pow_mod(i,p1,m,lev+1),
      res2 = pow_mod(i,p2,m,lev+1);
    res = res1*res2;
  } else {
    res = (long long)bigpow;
  }
  for (int il=0; il<lev; ++il) cout << "    ";
  cout << "=> " << res << "%" << m << "=" << res%m << '\n';
  return res % m;
};
